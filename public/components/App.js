import Header from './Header.js';
import Checkout from './Checkout.js';
import Account from './Account.js';
import Shipping from './Shipping.js';
import Payment from './Payment.js';
import Confirmation from './Confirmation.js';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.userData = [];
    this.state = {
      checkout: false,
      shipping: false,
      payment: false,
      confirm: false
    };
    this.startCheckout = this.startCheckout.bind(this);
    this.startShipping = this.startShipping.bind(this);
    this.startPayment = this.startPayment.bind(this);
    this.startConfirm = this.startConfirm.bind(this);
    this.accountSubmit = this.accountSubmit.bind(this);
    this.shippingSubmit = this.shippingSubmit.bind(this);
    this.paymentSubmit = this.paymentSubmit.bind(this);
  }

  startCheckout() {
    this.setState({
      checkout: !this.state.checkout
    });
  }

  startShipping() {
    this.setState({
      shipping: !this.state.shipping
    });
  }

  startPayment() {
    this.setState({
      payment: !this.state.payment
    });
  }

  startConfirm() {
    this.setState({
      confirm: !this.state.confirm
    });
  }

  accountSubmit(userObj) {
    this.userData.push({
      user: userObj
    });
  }

  shippingSubmit(addressObj) {
    this.userData.push({
      address: addressObj
    });
  }

  paymentSubmit(paymentObj) {
    this.userData.push({
      payment: paymentObj
    });
    console.log(this.userData);
  }

  render() {
    let startedCheckout = this.state.checkout;
    let startedShipping = this.state.shipping;
    let startedPayment = this.state.payment;
    let startedConfirm = this.state.confirm;
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Header, null), !startedCheckout ? /*#__PURE__*/React.createElement(Checkout, {
      startCheckout: this.startCheckout
    }) : null, startedCheckout && !startedShipping ? /*#__PURE__*/React.createElement(Account, {
      startShipping: this.startShipping,
      accountSubmit: this.accountSubmit
    }) : null, startedShipping && !startedPayment ? /*#__PURE__*/React.createElement(Shipping, {
      startPayment: this.startPayment,
      shippingSubmit: this.shippingSubmit
    }) : null, startedPayment && !startedConfirm ? /*#__PURE__*/React.createElement(Payment, {
      startConfirm: this.startConfirm,
      paymentSubmit: this.paymentSubmit
    }) : null, startedConfirm ? /*#__PURE__*/React.createElement(Confirmation, null) : null);
  }

}

export default App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL0FwcC5qc3giXSwibmFtZXMiOlsiSGVhZGVyIiwiQ2hlY2tvdXQiLCJBY2NvdW50IiwiU2hpcHBpbmciLCJQYXltZW50IiwiQ29uZmlybWF0aW9uIiwiQXBwIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwidXNlckRhdGEiLCJzdGF0ZSIsImNoZWNrb3V0Iiwic2hpcHBpbmciLCJwYXltZW50IiwiY29uZmlybSIsInN0YXJ0Q2hlY2tvdXQiLCJiaW5kIiwic3RhcnRTaGlwcGluZyIsInN0YXJ0UGF5bWVudCIsInN0YXJ0Q29uZmlybSIsImFjY291bnRTdWJtaXQiLCJzaGlwcGluZ1N1Ym1pdCIsInBheW1lbnRTdWJtaXQiLCJzZXRTdGF0ZSIsInVzZXJPYmoiLCJwdXNoIiwidXNlciIsImFkZHJlc3NPYmoiLCJhZGRyZXNzIiwicGF5bWVudE9iaiIsImNvbnNvbGUiLCJsb2ciLCJyZW5kZXIiLCJzdGFydGVkQ2hlY2tvdXQiLCJzdGFydGVkU2hpcHBpbmciLCJzdGFydGVkUGF5bWVudCIsInN0YXJ0ZWRDb25maXJtIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxNQUFQLE1BQW1CLGFBQW5CO0FBQ0EsT0FBT0MsUUFBUCxNQUFxQixlQUFyQjtBQUNBLE9BQU9DLE9BQVAsTUFBb0IsY0FBcEI7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLGVBQXJCO0FBQ0EsT0FBT0MsT0FBUCxNQUFvQixjQUFwQjtBQUNBLE9BQU9DLFlBQVAsTUFBeUIsbUJBQXpCOztBQUVBLE1BQU1DLEdBQU4sU0FBa0JDLEtBQUssQ0FBQ0MsU0FBeEIsQ0FBa0M7QUFDaENDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUFRO0FBQ2pCLFVBQU1BLEtBQU47QUFFQSxTQUFLQyxRQUFMLEdBQWdCLEVBQWhCO0FBRUEsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLE1BQUFBLFFBQVEsRUFBRSxLQURDO0FBRVhDLE1BQUFBLFFBQVEs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QkFBQyxRQUFEO0FBQVUsTUFBQSxZQUFZLEVBQUUsS0FBS2pCLFlBQTdCO0FBQTJDLE1BQUEsY0FBYyxFQUFFLEtBQUtHO0FBQWhFLE1BQXJDLEdBQTBILElBTjlILEVBUUljLGNBQWMsSUFBSSxDQUFDQyxjQUFuQixnQkFBb0Msb0JBQUMsT0FBRDtBQUFTLE1BQUEsWUFBWSxFQUFFLEtBQUtqQixZQUE1QjtBQUEwQyxNQUFBLGFBQWEsRUFBRSxLQUFLRztBQUE5RCxNQUFwQyxHQUFzSCxJQVIxSCxFQVVJYyxjQUFjLGdCQUFHLG9CQUFDLFlBQUQsT0FBSCxHQUFzQixJQVZ4QyxDQURGO0FBY0Q7O0FBaEYrQjs7QUFtRmxDLGVBQWVoQyxHQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlYWRlciBmcm9tICcuL0hlYWRlci5qcyc7XG5pbXBvcnQgQ2hlY2tvdXQgZnJvbSAnLi9DaGVja291dC5qcyc7XG5pbXBvcnQgQWNjb3VudCBmcm9tICcuL0FjY291bnQuanMnO1xuaW1wb3J0IFNoaXBwaW5nIGZyb20gJy4vU2hpcHBpbmcuanMnO1xuaW1wb3J0IFBheW1lbnQgZnJvbSAnLi9QYXltZW50LmpzJztcbmltcG9ydCBDb25maXJtYXRpb24gZnJvbSAnLi9Db25maXJtYXRpb24uanMnO1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMudXNlckRhdGEgPSBbXTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBjaGVja291dDogZmFsc2UsXG4gICAgICBzaGlwcGluZzogZmFsc2UsXG4gICAgICBwYXltZW50OiBmYWxzZSxcbiAgICAgIGNvbmZpcm06IGZhbHNlXG4gICAgfVxuXG4gICAgdGhpcy5zdGFydENoZWNrb3V0ID0gdGhpcy5zdGFydENoZWNrb3V0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdGFydFNoaXBwaW5nID0gdGhpcy5zdGFydFNoaXBwaW5nLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdGFydFBheW1lbnQgPSB0aGlzLnN0YXJ0UGF5bWVudC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc3RhcnRDb25maXJtID0gdGhpcy5zdGFydENvbmZpcm0uYmluZCh0aGlzKTtcbiAgICB0aGlzLmFjY291bnRTdWJtaXQgPSB0aGlzLmFjY291bnRTdWJtaXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLnNoaXBwaW5nU3VibWl0ID0gdGhpcy5zaGlwcGluZ1N1Ym1pdC5iaW5kKHRoaXMpO1xuICAgIHRoaXMucGF5bWVudFN1Ym1pdCA9IHRoaXMucGF5bWVudFN1Ym1pdC5iaW5kKHRoaXMpO1xuXG4gIH1cblxuICBzdGFydENoZWNrb3V0KCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgY2hlY2tvdXQ6ICF0aGlzLnN0YXRlLmNoZWNrb3V0XG4gICAgfSlcbiAgfVxuXG4gIHN0YXJ0U2hpcHBpbmcoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzaGlwcGluZzogIXRoaXMuc3RhdGUuc2hpcHBpbmdcbiAgICB9KVxuICB9XG5cbiAgc3RhcnRQYXltZW50KCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgcGF5bWVudDogIXRoaXMuc3RhdGUucGF5bWVudFxuICAgIH0pXG4gIH1cblxuICBzdGFydENvbmZpcm0oKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBjb25maXJtOiAhdGhpcy5zdGF0ZS5jb25maXJtXG4gICAgfSlcbiAgfVxuXG4gIGFjY291bnRTdWJtaXQodXNlck9iaikge1xuICAgIHRoaXMudXNlckRhdGEucHVzaCh7IHVzZXI6IHVzZXJPYmogfSlcbiAgfVxuXG4gIHNoaXBwaW5nU3VibWl0KGFkZHJlc3NPYmopIHtcbiAgICB0aGlzLnVzZXJEYXRhLnB1c2goeyBhZGRyZXNzOiBhZGRyZXNzT2JqIH0pXG4gIH1cblxuICBwYXltZW50U3VibWl0KHBheW1lbnRPYmopIHtcbiAgICB0aGlzLnVzZXJEYXRhLnB1c2goeyBwYXltZW50OiBwYXltZW50T2JqIH0pXG4gICAgY29uc29sZS5sb2codGhpcy51c2VyRGF0YSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHN0YXJ0ZWRDaGVja291dCA9IHRoaXMuc3RhdGUuY2hlY2tvdXQ7XG4gICAgbGV0IHN0YXJ0ZWRTaGlwcGluZyA9IHRoaXMuc3RhdGUuc2hpcHBpbmc7XG4gICAgbGV0IHN0YXJ0ZWRQYXltZW50ID0gdGhpcy5zdGF0ZS5wYXltZW50O1xuICAgIGxldCBzdGFydGVkQ29uZmlybSA9IHRoaXMuc3RhdGUuY29uZmlybTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8SGVhZGVyIC8+XG4gICAgICAgIHsgIXN0YXJ0ZWRDaGVja291dCA/IDxDaGVja291dCBzdGFydENoZWNrb3V0PXt0aGlzLnN0YXJ0Q2hlY2tvdXR9IC8+IDogbnVsbCB9XG5cbiAgICAgICAgeyBzdGFydGVkQ2hlY2tvdXQgJiYgIXN0YXJ0ZWRTaGlwcGluZyA/IDxBY2NvdW50IHN0YXJ0U2hpcHBpbmc9e3RoaXMuc3RhcnRTaGlwcGluZ30gYWNjb3VudFN1Ym1pdD17dGhpcy5hY2NvdW50U3VibWl0fSAvPiA6IG51bGwgfVxuXG4gICAgICAgIHsgc3RhcnRlZFNoaXBwaW5nICYmICFzdGFydGVkUGF5bWVudCA/IDxTaGlwcGluZyBzdGFydFBheW1lbnQ9e3RoaXMuc3RhcnRQYXltZW50fSBzaGlwcGluZ1N1Ym1pdD17dGhpcy5zaGlwcGluZ1N1Ym1pdH0gLz4gOiBudWxsIH1cblxuICAgICAgICB7IHN0YXJ0ZWRQYXltZW50ICYmICFzdGFydGVkQ29uZmlybSA/IDxQYXltZW50IHN0YXJ0Q29uZmlybT17dGhpcy5zdGFydENvbmZpcm19IHBheW1lbnRTdWJtaXQ9e3RoaXMucGF5bWVudFN1Ym1pdH0gLz4gOiBudWxsIH1cblxuICAgICAgICB7IHN0YXJ0ZWRDb25maXJtID8gPENvbmZpcm1hdGlvbiAvPiA6IG51bGx9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwOyJdfQ==